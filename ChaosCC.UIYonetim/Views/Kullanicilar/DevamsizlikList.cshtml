@using ChaosCC.CommonLibrary
@model IEnumerable<ChaosCC.Dto.KullaniciDevamsilikListDto>

@{
    ViewBag.Title = "Devamsizlik Listesi";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewBag.Title</h2>
<button onclick="self.print()"><i class="glyphicon-print"></i>Yazdır</button>
<hr />

@foreach (var kul in Model)
{
    <hr />
    <h3>@kul.Kullanici.KullaniciAdi</h3>
    <hr />
    <table class="table table-striped small">
        <tr>
            <th class="text-right">
                Sıra
            </th>
            <th>
                Etkinlik Tarihi
            </th>
            <th>
                Etkinlik Türü
            </th>
            <th>
                Etkinlik Adı
            </th>
            <th>
                Etkinlik Açıklama
            </th>
            <th>
                Geldi
            </th>
            <th>
                Devamsızlık Açıklama
            </th>
        </tr>
        @{
            int i = 0;
            int geldiCount = 0;
            foreach (var item in kul.Devamsizlik)
            {
                i += 1;
                geldiCount = geldiCount + (item.Geldi ? 1 : 0);
                <tr @(item.Geldi ? "" : "class=table-warning")>
                    <td class="text-right">
                        @i
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EtkinlikTarihi)
                    </td>
                    <td>
                        @item.EtkinlikTuru.ToDisplay()
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EtkinlikAdi)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EtkinlikAciklama)
                    </td>
                    <td>
                        @(item.Geldi ? "Geldi" : "Yok")
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DevamsizlikAciklama)
                    </td>
                </tr>
            }
            <tr>
                <th>Toplam</th>
                <th>@geldiCount / @i</th>
                <th></th>
                <th></th>
                <th>Oran</th>
                <th>% @Math.Round(i != 0 ? (geldiCount / (decimal)i * 100) : 0)</th>
                <th></th>
            </tr>
        }

    </table>
    <hr />
}

